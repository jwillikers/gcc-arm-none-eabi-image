---
name: CI
on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    # Run at 1:10 on Sunday
    - cron: "10 1 * * 0"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - arm
          - arm64
          - amd64
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Build the image with Buildah
        run: ./gnu-arm-embedded-image.sh -a ${{ matrix.arch }}

      - name: Tag the image for Fedora 34
        run: podman tag localhost/gnu-arm-embedded localhost/gnu-arm-embedded:34

      - name: Export the image
        run: podman image save --format oci-archive -o gnu-arm-embedded-${{ matrix.arch }}.tar localhost/gnu-arm-embedded

      - uses: actions/upload-artifact@v2
        with:
          name: gnu-arm-embedded-${{ matrix.arch }}
          path: gnu-arm-embedded-${{ matrix.arch }}.tar

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        arch:
          - arm
          - arm64
          - amd64
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: gnu-arm-embedded-${{ matrix.arch }}

      - name: Load the image
        run: podman image load -i gnu-arm-embedded-${{ matrix.arch }}.tar

      - name: Run the image and verify that the GNU Arm Embedded Toolchain is available inside the container
        run: podman run --rm --volume "$PWD":/home/user:Z --name test-container -d localhost/gnu-arm-embedded arm-none-eabi-g++ test/main.cpp
  
  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Create a manifest
        run: buildah manifest create gnu-arm-embedded-multiarch:latest

      # armhfp
      - uses: actions/download-artifact@v2
        with:
          name: gnu-arm-embedded-arm

      - name: Load the arm64 image
        run: podman image load -i gnu-arm-embedded-arm.tar
              
      - name: Add the arm image to the manifest
        run: buildah manifest add gnu-arm-embedded-multiarch:latest localhost/gnu-arm-embedded

      # aarch64
      - uses: actions/download-artifact@v2
        with:
          name: gnu-arm-embedded-arm64

      - name: Load the arm64 image
        run: podman image load -i gnu-arm-embedded-arm64.tar
              
      - name: Add the arm64 image to the manifest
        run: buildah manifest add gnu-arm-embedded-multiarch:latest localhost/gnu-arm-embedded

      # x86_64
      - uses: actions/download-artifact@v2
        with:
          name: gnu-arm-embedded-amd64

      - name: Load the amd64 image
        run: podman image load -i gnu-arm-embedded-amd64.tar

      - name: Add the amd64 image to the manifest
        run: buildah manifest add gnu-arm-embedded-multiarch:latest localhost/gnu-arm-embedded

      - name: Push latest manifest and images to quay.io
        run: buildah manifest push --rm --all --creds jwillikers+publisher:${{ secrets.REGISTRY_PASSWORD }} gnu-arm-embedded-multiarch:latest docker://quay.io/jwillikers/gnu-arm-embedded
